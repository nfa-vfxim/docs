# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020-2021, Netherlands Film Academy
# This file is distributed under the same license as the vfxim-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: vfxim-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-30 12:07+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../docs/class/l2021/l2021_render_tutorial.rst:3
#: e8c41bec3fef4e94a3db9a241121210e
msgid "Rendering with Arnold in the Shotgun Pipeline"
msgstr ""

#: ../../docs/class/l2021/l2021_render_tutorial.rst:5
#: 0fc2da3cef6f4b7d93423d5430d92177
msgid ""
"This article will guide you through the process of creating renders with "
"*Arnold* in the *Shotgun* pipeline."
msgstr ""

#: ../../docs/class/l2021/l2021_render_tutorial.rst:9
#: c3281e45870846a1b8c9391a952e8a13
msgid "Preparing scene and creating ASS files"
msgstr ""

#: ../../docs/class/l2021/l2021_render_tutorial.rst:11
#: f5beb1ee6ad14c98a656c27295088b2a
msgid ""
"In order to properly render through the farm and *Shotgun* pipeline you "
"will need to prepare your scene file. Start by placing a *SGTK Arnold* "
"node in your */out* network."
msgstr ""

#: ../../docs/class/l2021/l2021_render_tutorial.rst:16
#: 210cdadf578c410d955d26fb4ca50475
msgid ""
"The *SGTK Arnold* node removes the standard output file options and "
"automatically fills in any path. To render using the farm you need to "
"enable the creation of ``.ass`` files. Go to the *archive* tab and click "
"*Export ASS file*."
msgstr ""

#: ../../docs/class/l2021/l2021_render_tutorial.rst:21
#: 7d1b6454a120428aafdecc47a09ad841
msgid ""
"The path should automatically be filled by the pipeline. Make sure "
"*Render Frame Range* is selected if you would like to render a sequence "
"and then click *Render to disk*."
msgstr ""

#: ../../docs/class/l2021/l2021_render_tutorial.rst:25
#: c565b2a5d1a243cb8185aeeefe87c90b
msgid ""
"The ``.ass`` file creation will now commence locally on your computer. As"
" soon as it's done, you can submit this render through the *Arnold (ASS)*"
" submitter in *Deadline*."
msgstr ""

#: ../../docs/class/l2021/l2021_render_tutorial.rst:29
#: 25c0098338bf46399d684edfa7a3e048
msgid "Submitting render to Deadline"
msgstr ""

#: ../../docs/class/l2021/l2021_render_tutorial.rst:31
#: c92804b7c1194d93b31afe4fbecaf5c7
msgid ""
"To submit the ``.ass`` files sequence to *Deadline*, first, open up the "
"*Deadline Monitor*. Inside the monitor click *Submit -> 3D -> Arnold "
"(ASS)*."
msgstr ""

#: ../../docs/class/l2021/l2021_render_tutorial.rst:35
#: 3b227aa795f34512a1a7806d10bedeaa
msgid ""
"In the opened job submitter, first name the job properly to the task at "
"hand. All the priority and pool settings are set correctly by default. "
"You will need to select the first frame of the ``.ass`` file sequence. "
"Once you have selected the first frame it will automatically correct the "
"frame range variable. If it doesn't automatically change the variable, "
"fill it in manually. (See screenshot below for reference)."
msgstr ""

#: ../../docs/class/l2021/l2021_render_tutorial.rst:40
#: 6a0e982216f94a8bafbeb35a6231bd4c
msgid "Click submit to start rendering and see the magic happen!"
msgstr ""

#: ../../docs/class/l2021/l2021_render_tutorial.rst:42
#: cf263a76f8da470bb6cc76270437a9fc
msgid ""
"It's important to note that you should always check the first few frames "
"rendered on the farm. There's a multitude of errors that can pop up that "
"you'll need to fix manually. From locally referenced files to workers in "
"the farm needing to be blacklisted because of inconclusive OS images."
msgstr ""

#: ../../docs/class/l2021/l2021_render_tutorial.rst:46
#: 0226e9c8e9334c408b8a0249ee176cdf
msgid "Publishing finished renders"
msgstr ""

#: ../../docs/class/l2021/l2021_render_tutorial.rst:48
#: 425197dcd7f54ae0a7557faf08c234d6
msgid ""
"When the render has finished in the *Deadline Monitor* you are ready to "
"publish your ``.exr`` image sequence. Back in *Houdini*, click on the "
"*Shotgun* tab *-> Publish*. The *Shotgun Publisher* should automatically "
"pick up all the rendered files. If it doesn't, check to make sure the "
"rendered files are actually present on the server. If you have selected "
"any *AOV*'s you should see them as children from the main ``.exr`` file."
msgstr ""

#: ../../docs/class/l2021/l2021_render_tutorial.rst:51
#: 620d37647c934db28c1856369484484f
msgid ""
"Create a screenshot for every Beauty/AOV and click publish. Congrats, "
"you're done! You should now be able to import the ``.exr`` sequence in "
"*Nuke*."
msgstr ""

#: ../../docs/class/l2021/l2021_render_tutorial.rst:57
#: 582c7edfa4ad441286b0396e882aaf8b
msgid "Extra's"
msgstr ""

#: ../../docs/class/l2021/l2021_render_tutorial.rst:61
#: 4cc0344edf2940a5b91f3830ead988b8
msgid "AOV's"
msgstr ""

#: ../../docs/class/l2021/l2021_render_tutorial.rst:63
#: 7819c74c64fb4230b7725f91b8efdc64
msgid ""
"Should you want to include an *AOV* inside your render, the process is as"
" follows:"
msgstr ""

#: ../../docs/class/l2021/l2021_render_tutorial.rst:65
#: 1e51cfc27abb421b8b4ae7d2c29839ea
msgid "Add the AOV like you normally would inside Arnold."
msgstr ""

#: ../../docs/class/l2021/l2021_render_tutorial.rst:66
#: 64eb9b41bb4149bba9357c89bd954fa9
msgid ""
"Click 'render as separate file' if you don't want to merge the AOV inside"
" the beauty render."
msgstr ""

#: ../../docs/class/l2021/l2021_render_tutorial.rst:67
#: d7eb0a02b2c64490a30e756805da1866
msgid "The pipeline will automatically take care of the paths supplied."
msgstr ""

#: ../../docs/class/l2021/l2021_render_tutorial.rst:71
#: 3181eab126b24194b4afedeb9b30615f
msgid ""
"One thing the Arnold engine + pipeline does **NOT** understand is the "
"splitting of multiple light groups p√©r AOV into different EXR sequences. "
"For these AOV sets it's best to include them inside the beauty."
msgstr ""

#: ../../docs/class/l2021/l2021_render_tutorial.rst:73
#: ae435e9773f14151892b07a568b4f6e9
msgid ""
"Adding a *Cryptomatte* AOV is not as simple as adding the AOV from the "
"selection box. See `this "
"<https://docs.arnoldrenderer.com/display/A5AFHUG/Cryptomatte+AOVs>`_ "
"Arnold documentation page on how to properly add cryptomatte AOV's. One "
"important note to add that the Arnold documentation does not include is "
"that you should disable the options *Strip Object Namespace* & *Strip "
"Material Namespace* when rendering in Houdini."
msgstr ""

